cmake_minimum_required(VERSION 2.6)

macro(set_option var default type docstring)
    if(NOT DEFINED ${var})
        set(${var} ${default})
    endif()
    set(${var} ${${var}} CACHE ${type} ${docstring} FORCE)
endmacro()

project(CMakeTest)
include_directories(${PROJECT_BINARY_DIR})
set(EXECUTABLE_NAME UltimateAI)
file(GLOB sources ${CMAKE_SOURCE_DIR}/src/*)
add_executable(${EXECUTABLE_NAME} ${sources})

set(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake_modules" ${CMAKE_MODULE_PATH})

if(NOT SFML_INC AND NOT SFML_LIBS)
	find_package(SFML 2.1 COMPONENTS system window graphics audio)
	mark_as_advanced(SFML_INCLUDE_DIR SFML_LIBRARIES)
	if(SFML_FOUND)
		set(SFML_INC ${SFML_INCLUDE_DIR})
		set(SFML_LIBS ${SFML_LIBRARIES})
	endif()
endif()

if(NOT LUA_INC AND NOT LUA_LIBS)
	find_package(Lua 5.2)
	mark_as_advanced(LUAL_INCLUDE_DIR LUA_LIBRARIES)
	if(LUA_FOUND)
		set(LUA_INC ${LUA_INCLUDE_DIR})
		set(LUA_LIBS ${LUA_LIBRARIES})
	endif()
endif()

set_option(SFML_INC "" PATH "path to sfml headers")
set_option(SFML_LIBS "" STRING "sfml library files")
set_option(LUA_INC "" PATH "path to lua headers")
set_option(LUA_LIBS "" STRING "lua library files")

if(SFML_INC AND SFML_LIBS AND LUA_INC AND LUA_LIBS)
	include_directories(${SFML_INC})
	include_directories(${LUA_INC})
	target_link_libraries(${EXECUTABLE_NAME} ${SFML_LIBS})
	target_link_libraries(${EXECUTABLE_NAME} ${LUA_LIBS})

	install(TARGETS ${EXECUTABLE_NAME} DESTINATION bin)
	file(COPY "res" DESTINATION "res")
endif()